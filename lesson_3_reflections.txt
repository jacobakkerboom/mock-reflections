Question: When would you want to create a remote repository rather than keeping all your work local?

When you want to share your work with other people!

Question: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You could reduce internet traffic if you do not always stay up-to-date. In
addition, you may have set up things so that somebody else can commit to the
remote and you might want to see what they have committed first.

Question: Describe the differences between forks, clones, and branches.
When would you use one instead of another?

The clone command copies a repository to a machine. You cannot clone a
reposity "into" Github. A fork copies a reposity on Github and handles some
details like incrementing a counter on the original repository that keeps
track on how often the repo was cloned. A branch is just a label for a
sequence of commits.

Question: What is the benefit of having a copy of the last known state of
the remote stored locally?

This allows you to compare the state of the remote and your own branch. Git
has to keep track of where the remote changes "branched" from your own ones
somehow. While this is also clear from the commit id, so that it can be
inferred from the history of the remote, it is also nice to have this
information locally, for example because you trust this information more.
It also allows you to see how far ahead you are of the last sync with the
remote.

Question: How would you collaborate without using Git or GitHub? What would
be easier, and what would be harder?

I could just edit plain text files on Github. I wouldn't be able to use a
fancy text editor and I would need internet access continously to edit files,
as opposed to just once to upload the file. Making a quick fix like a typo
would probably be more convenient using Github.
